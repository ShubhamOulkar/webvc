
1) The CSRF middleware is activated by default in the MIDDLEWARE setting. If you override that setting, 
remember that 'django.middleware.csrf.CsrfViewMiddleware' should come before any view middleware that 
assume that CSRF attacks have been dealt with.

2) Get CSRF cookie:
   Following function get csrf cookie from your browser. Copy in it in your .js file.

    function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            // Does this cookie string begin with the name we want?
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}
const csrftoken = getCookie('csrftoken');

3) Finally, youâ€™ll need to set the header on the fetch() API:
    Pass csrftoken in headers as a 'X-CSRFToken'. Don't forget mode: 'same-origin'.  

    let response = await fetch('/django_url/', {
            method: 'POST', # PULL, DELETE, etc.
            headers: {
                'Content-Type':'application/json',
                'X-CSRFToken': csrftoken 
            },
            mode: 'same-origin' ,
            body:JSON.stringify({})
        })
        .catch(err => console.log(err))
    